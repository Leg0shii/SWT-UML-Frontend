@startuml
class de.swt.manager.CommandObject {
- String command
- byte[] workspaceFileBytes
}
class de.swt.logic.course.Course {
- int id
- int grade
- String name
- ArrayList<Date> dates
- int teacherID
+ User getTeacher()
}
class de.swt.logic.user.UserManager {
- Client client
- AsyncMySQL mySQL
- HashMap<Integer,User> userHashMap
+ User loadUser(int)
+ void cacheAllUserData()
- ArrayList<Integer> loadCourses(int)
+ boolean userLogin(int,String)
- String hashLogin(int,String)
+ void userLogout()
+ boolean checkSessionStarted(Date)
+ void setSingleCourse(User,int)
+ void removeSingleCourse(User,int)
}
class de.swt.gui.classroom.GradePanel {
- Course course
- JPanel mainPanel
+ JButton enterButton
+ JButton editButton
- JLabel dateLabel
- JLabel teacherLabel
- JLabel nextDateLabel
- JLabel thisTeacherLabel
- JLabel gradeHeaderLabel
+ int grade
- EditClassroomPanel editClassroomPanel
- AdminEditClassroomPanel adminEditClassroomPanel
- void setupGUI(String,String,String,String,String)
+ void updateGUI(Course)
+ void setupActionListeners(AccountType)
+ Course getCourse()
+ void setCourse(Course)
+ JPanel getMainPanel()
+ String getNextDate()
+ User getThisTeacher()
+ String getGradePlusGradeName()
+ EditClassroomPanel getEditClassroomPanel()
+ AdminEditClassroomPanel getAdminEditClassroomPanel()
- String getNextSessionDate()
- void enterFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
interface de.swt.rmi.RMIServerInterface {
~ TestClass testClass(TestClass)
~ int ping(int)
~ User sendUser(User,int,boolean)
~ Course sendCourse(Course,int,boolean)
~ Group sendGroup(Group,int,boolean)
~ Session sendSession(Session,int,boolean)
~ ArrayList<CommandObject> accessCommandQueue(int)
~ void updateWorkspaceFile(byte[],int)
}
class de.swt.gui.workspace.GroupButtonPanel {
- JPanel mainPanel
+ JButton watchButton
+ JButton terminateButton
- void setupGUI(String,String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.drawing.objects.ThumbDown {
- int width
- FontIcon icon
~ void drawFunction(Graphics2D)
- void setupIcon()
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.gui.workspace.CreateGroupPanel {
- JPanel mainPanel
- JTextField numberTextField
- JTextField sizeTextField
- JTextField durationTextField
- JButton createButton
+ JButton cancelButton
- JLabel headerLabel
- JLabel numberLabel
- JLabel sizeLabel
- JLabel durationLabel
- JLabel unitLabel
- void setupGUI(String,String,String,String,String,String,String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
+ String getNumberText()
+ String getSizeText()
+ String getDurationText()
- void createFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.drawing.objects.UseCase {
- int width
- int height
~ void drawFunction(Graphics2D)
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.gui.classroom.EditClassroomPanel {
+ JButton doneButton
+ JButton cancelButton
- JPanel mainPanel
- JTextField studentTextField
- JComboBox<String> studentComboBox
- JLabel studentComboBoxLabel
- JLabel studentTextFieldLabel
- Course course
- void setupGUI(String,String,String,String)
+ void updateGUI(ArrayList<User>)
+ void updateGUI()
+ String getStudentToAdd()
+ String getStudentToRemove()
+ void doneFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.CreateTaskPanel {
- JPanel mainPanel
- JTextArea taskTextArea
- JPanel filePanel
- JButton selectFileButton
- JLabel headerLabel
- JLabel pictureLabel
- JLabel selectedFileLabel
+ JButton cancelButton
+ JButton createButton
+ JScrollPane taskScrollPanel
- File selectedFile
- void setupGUI(String,String,String,String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
- void fileChooserFunction()
+ String getTaskText()
+ File getSelectedFile()
+ void createFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.WorkspaceGUI {
- JPanel mainPanel
- JRadioButton writeRadioButton
- JRadioButton annotationRadioButton
- JButton logoutButton
- JPanel leftPanel
- JPanel menuPanel
- JPanel objectListPanelPanel
- JPanel midPanel
- JPanel rightPanel
- JButton sendTaskButton
- ObjectListPanel objectListPanel
- DrawablePanel drawablePanel
- Group selectedGroup
- SymbolListPanel symbolListPanel
- void setupGUI(String,String,String,String)
+ void updateGUI()
- void initForWorkspaceState()
- void setupListeners()
- void initForAccountType()
- void logout()
+ boolean isWrite()
+ boolean isAnnotate()
+ void sendRequest(User)
+ void sendTaskProposition(List<Group>)
+ void setTask(String)
+ void addToDrawPanel(JComponent)
+ boolean removeLastDrawnObject()
+ Group getSelectedGroup()
+ Component[] getDrawnObjects()
+ Component[] getAnnotations()
+ boolean removeLastAnnotations()
+ void removeAllIndexedObjects(Component[])
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.util.ServerConn {
- int serverPort
+ ServerSocket serverSocket
- byte[] byteMessage
- Client client
+ void listenForTCP()
+ void startServer()
}
class de.swt.gui.workspace.SymbolListPanel {
- JPanel mainPanel
- JButton thumbsUpButton
- JButton thumbsDownButton
- JButton clearButton
- JPanel toolPanel
+ JPanel symbolPanel
- void setupGUI()
+ void updateGUI()
- void setupListeners()
+ void removeAnnotationOptions()
+ void addAnnotationsOptions()
- void initForAccountType()
- void drawThumbUp()
- void drawThumbDown()
- void deleteLastDrawnObject()
+ void removeEditingOptions()
+ void addEditingOptions()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.database.AsyncMySQL {
- ExecutorService executor
- MySQL sql
+ void update(PreparedStatement)
+ void update(String)
+ void insert(String,Consumer<Integer>)
+ void query(PreparedStatement,Consumer<ResultSet>)
+ ResultSet query(String)
+ PreparedStatement prepare(String)
+ MySQL getMySQL()
}
class de.swt.database.AsyncMySQL.MySQL {
- String host
- String user
- String password
- String database
- int port
- Connection conn
+ void openConnection()
+ void closeConnection()
+ boolean isConnected()
+ boolean isConnected(boolean)
+ boolean reconnect()
+ Connection getConnection()
+ void queryUpdate(String)
+ void queryUpdate(PreparedStatement)
+ ResultSet query(String)
+ ResultSet query(PreparedStatement)
}
class de.swt.logic.user.User {
- int id
- AccountType accountType
- String firstname
- String surname
- ArrayList<Integer> course
- boolean online
- boolean isInGroup
- boolean isInCourse
+ String getFullName()
}
abstract class de.swt.drawing.buttons.DrawableObjectButton {
+ GUIManager guiManager
+ String description
+ double scale
+ Color color
+ int offset
+ int textWidth
+ int textHeight
~ {abstract}void setupListeners()
+ void paintComponent(Graphics)
~ {abstract}void calculateWidthAndHeight(Graphics2D)
~ {abstract}void drawButton(Graphics2D)
}
class de.swt.logic.session.Session {
~ int id
~ ArrayList<Integer> participants
~ Integer master
~ Integer remainingTime
~ ArrayList<Integer> groups
}
class de.swt.gui.GUIManager {
+ Language language
+ AccountType accountType
+ LoginGUI loginGUI
+ ClassroomGUI classroomGUI
+ WorkspaceGUI workspaceGUI
- List<GUI> childrenGUI
- Client client
- int drawableObjectCounter
+ WorkspaceState state
+ Session currentSession
+ void updateGUIManager(Client)
+ void setupGUIS()
+ void updateGUIS(ArrayList<User>)
+ void updateGUIS()
+ void switchToLoginGUI()
+ void switchToClassRoomGUI()
+ void switchToWorkspaceGUI()
+ void closeAllPopups()
+ void addToDrawPanel(JComponent)
+ Language getLanguage()
+ Client getClient()
+ boolean removeLastDrawnObject()
+ boolean removeLastAnnotations()
+ Component[] getDrawnObjects()
+ Component[] getAnnotations()
+ void addDrawnObjects(Component[])
+ void addAnnotations(Component[])
+ void saveWorkspace(File)
+ void loadWorkspace(File)
+ void syncWorkspace(byte[])
+ void syncSingleObject(Component)
- void removeAllIndexedObjects(Component[])
+ int increaseObjectCounter()
+ void setWorkspaceState(WorkspaceState)
}
class de.swt.gui.workspace.UserButtonPanel {
- JPanel mainPanel
+ JButton kickButton
- void setupGUI(String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.classroom.CreateClassroomPanel {
- JPanel mainPanel
- JComboBox<String> gradeComboBox
- JTextField gradeNameTextField
- JTextField teacherTextField
- JTextField dateTextField
+ JButton doneButton
+ JButton cancelButton
- JLabel gradeLabel
- JLabel gradeNameLabel
- JLabel teacherLabel
- JLabel dateLabel
- void setupGUI(String,String,String,String,String,String)
+ String getGradeName()
+ String getTeacher()
+ String getDate()
+ void doneFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.ObjectListPanel {
- JPanel mainPanel
- JButton switchButton
- JPanel objectList
- JLabel headerLabel
- JScrollPane objectScrollPanel
- String participants
- String groups
- String group
- boolean showGroups
- JButton addStudentButton
- List<Group> groupsList
- List<User> users
- void setupGUI(String,String,String,String)
+ void updateGUI(List<Group>,List<User>)
+ void updateGUI()
- void setupListeners()
+ void initForAccountType()
- void setupObjectButtons(List<Group>,List<User>)
- void setupListenerForObjectButton(JButton,Object,int)
- void removeStudent(User)
- void terminateGroup(Group)
- void watchGroup(Group)
- void addUserFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.rmi.RMIClient {
- String registryName
- String serverAddress
- int serverRMIPort
- String hashFunction(String)
+ RMIServerInterface initRMIClient()
}
class de.swt.drawing.objects.DottedArrow {
~ void drawFunction(Graphics2D)
}
class de.swt.drawing.objects.Actor {
- int width
- int height
- int verticalOffset
~ void drawFunction(Graphics2D)
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.logic.TestClass {
- int id
- AccountType accountType
- String firstname
- String surname
- int[] course
- boolean online
+ String getFullName()
}
class de.swt.logic.session.SessionManager {
- AsyncMySQL mySQL
- HashMap<Integer,Session> sessionHashMap
- Client client
+ Session loadSession(int)
+ void cacheAllSessionData()
- ArrayList<Integer> parseParticipants(String)
}
class de.swt.gui.useroverview.UserOverviewGUI {
- JPanel mainPanel
- void setupGUI()
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
abstract class de.swt.drawing.objects.DrawableObject {
+ Color color
+ double scale
+ int offset
+ String description
+ int textWidth
+ int textHeight
+ Popup popup
+ PopupFactory factory
+ int popupCounter
+ GUIManager guiManager
+ GUI popupPanel
- int[] id
- DrawableObject thisObject
+ void updateComponent(String,double,Color)
~ {abstract}void drawFunction(Graphics2D)
+ void paintComponent(Graphics)
- void setupListeners()
+ void init(GUIManager)
+ void removeInteraction()
+ void closeAllPopups()
+ int[] getID()
~ {abstract}void calculateWidthAndHeight(Graphics2D)
~ {abstract}GUI createPopup()
}
class de.swt.util.Client {
+ {static} Client instance
+ boolean loggedIn
+ AsyncMySQL mySQL
+ int userid
+ DBManager dbManager
+ CourseManager courseManager
+ UserManager userManager
+ GroupManager groupManager
+ SessionManager sessionManager
+ RMIServerInterface server
- ServerConn serverConn
+ GUIManager guiManager
+ void onStart()
+ void onDisable()
+ {static} Client getInstance()
+ void loadAllInformation()
}
abstract class de.swt.drawing.objects.RotatableObject {
+ int startYOffset
+ int endYOffset
+ boolean switchSides
+ void updateComponent(String,double,Color,int,int,boolean)
}
class de.swt.Application {
~ AccountType accountType
~ Language language
~ Client client
~ GUIManager guiManager
- void onStart()
}
class de.swt.drawing.buttons.ActorButton {
- int width
- int height
~ void setupListeners()
~ void calculateWidthAndHeight(Graphics2D)
~ void drawButton(Graphics2D)
}
class de.swt.util.ReadCommandList {
- Client client
+ void run()
- void evaluteCommand(CommandObject)
}
class de.swt.gui.login.LoginGUI {
- JPanel mainPanel
+ JButton loginButton
- JTextField usernameTextField
- JPasswordField passwordField
- JLabel loginLabel
- JLabel passwordLabel
- JLabel usernameLabel
- JPanel subPanel
- void setupGUI(String,String,String,String,String)
+ void updateGUI()
+ void setupActionListeners()
+ String getPassword()
+ String getUsername()
- void login()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.util.NextDate {
+ {static} Date getNextDate(ArrayList<Long>)
+ {static} ArrayList<Date> getDateFromString(String)
}
class de.swt.gui.workspace.RequestPanel {
- JPanel mainPanel
+ JButton acceptButton
+ JButton denyButton
- JLabel requestLabel
- void setupGUI(String,String,String)
+ void updateGUI(User)
- void setupListeners()
- void initForAccountType()
+ void acceptFunction()
+ void denyFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.DrawablePanel {
- JPanel mainPanel
- JButton taskButton
+ JPanel drawPanel
- JLabel remainingLabel
- JButton showTaskButton
- String task
- Stack<JComponent> drawableObjects
- void setupGUI(String,String,String)
+ void updateGUI(int)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
+ void setTask(String)
+ void addToDrawPanel(JComponent)
+ void removeInteraction()
+ void addInteraction()
+ boolean removeLastDrawnObject()
+ void closeAllPopups()
+ Component[] getDrawnObjects()
+ Component[] getAnnotations()
+ boolean removeLastAnnotations()
+ void removeAllIndexedObjects(Component[])
+ void removeEditingOptions()
+ void addEditingOptions()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.logic.course.CourseManager {
- AsyncMySQL mySQL
- HashMap<Integer,Course> courseHashMap
- Client client
+ Course loadCourse(int)
+ void cacheAllCourseData()
- ArrayList<Date> getDateFromString(String)
}
class de.swt.drawing.buttonGUIS.ResizingGUI {
- JPanel mainPanel
- JButton colorButton
- JSlider scaleSlider
- JSlider widthSlider
- JSlider heightSlider
- JTextField descriptionTextField
- JLabel descriptionLabel
- JLabel scaleLabel
- JLabel widthLabel
- JLabel heightLabel
- JLabel colorLabel
- JColorChooser colorChooser
- ResizableObject associatedObject
- String description
- Color color
- double scale
+ int height
+ int width
- void setupGUI(String,String,String,String,String,String)
+ void updateGUI()
- void setupListeners()
- double convertSliderValue(int)
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.Menu {
- GUIManager guiManager
- JMenu file
- JMenuItem saveFile
- JMenuItem loadFile
- JMenu navigate
- JMenuItem logoff
- JMenuItem toClassroomGUI
- void setupMenu(String,String,String,String,String)
- void setupListeners()
}
abstract class de.swt.drawing.objects.ResizableObject {
+ int width
+ int height
+ void updateComponent(String,double,Color,int,int)
}
class de.swt.gui.GUI {
+ GUIManager guiManager
+ List<Popup> popups
+ List<Integer> popupCounter
+ List<GUI> childrenGUI
+ PopupFactory factory
+ void incrementPopupCounter(int)
+ void initPopups(int)
+ GUI[] getAllChildrenGUI(Container,List<GUI>)
+ void closeAllPopups()
}
class de.swt.drawing.objects.ThumbUp {
- int width
- FontIcon icon
~ void drawFunction(Graphics2D)
- void setupIcon()
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.drawing.buttons.UseCaseButton {
- int width
- int height
~ void calculateWidthAndHeight(Graphics2D)
~ void setupListeners()
~ void drawButton(Graphics2D)
}
class de.swt.gui.workspace.SubmitTaskPanel {
- JPanel mainPanel
+ JButton yesButton
+ JButton noButton
- JLabel checkLabel
- void setupGUI(String,String,String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
+ void yesFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.classroom.AdminEditClassroomPanel {
- JPanel mainPanel
- JTextField gradeTextField
+ JButton resetButton
+ JButton migrateButton
+ JButton deleteButton
+ JButton cancelButton
- JLabel gradeLabel
- Course course
- void setupGUI(String,String,String,String,String)
+ String getGrade()
+ void migrateFunction()
+ void resetFunction()
+ void deleteFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.logic.group.GroupManager {
- Client client
- AsyncMySQL mySQL
- HashMap<Integer,Group> groupHashMap
+ Group loadGroup(int)
- ArrayList<Integer> parseParticipants(String)
+ void cacheAllGroupData()
}
class de.swt.drawing.Draggable {
- int screenX
- int screenY
- int myX
- int myY
+ boolean wantsToChange
+ void initListeners()
- ArrayList<Component> getAllUnderlyingComponents()
- boolean checkIfCrossingComponent(Component)
}
class de.swt.Main {
+ {static} void main(String[])
}
class de.swt.drawing.buttonGUIS.RotatingGUI {
- JPanel mainPanel
- JCheckBox arrowHeadOrientationCheckBox
- JButton colorButton
- JTextField descriptionTextField
- JSlider scaleSlider
- JSlider rotationSlider
- JLabel descriptionLabel
- JLabel scaleLabel
- JLabel rotationLabel
- JLabel colorLabel
- JColorChooser colorChooser
- RotatableObject associatedObject
- String description
- Color color
- double scale
+ int startYOffset
+ int endYOffset
+ boolean switchSides
- void setupGUI(String,String,String,String,String,String)
+ void updateGUI()
- void setupListeners()
- double convertSliderValue(int)
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.database.DBManager {
- AsyncMySQL mySQL
+ AsyncMySQL connectToDB()
}
class de.swt.logic.group.Group {
- int id
- int courseID
- int timeTillTermination
- int maxGroupSize
- ArrayList<Integer> participants
- String workspace
}
class de.swt.drawing.buttons.ArrowButton {
+ int width
+ int height
+ int startX
+ int startY
+ int endX
+ int endY
+ int startYOffset
+ int endYOffset
+ int arrowHeadWidth
+ boolean arrowHeadOnRightSide
~ void setupListeners()
~ void calculateWidthAndHeight(Graphics2D)
~ void drawButton(Graphics2D)
}
class de.swt.gui.workspace.ShowTaskPanel {
- JPanel mainPanel
- JLabel taskLabel
- void setupGUI()
+ void updateGUI(String)
- void setupListeners()
- void initForAccountType()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.drawing.objects.SystemBox {
~ void drawFunction(Graphics2D)
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.drawing.buttons.SystemBoxButton {
- int width
- int height
~ void setupListeners()
~ void calculateWidthAndHeight(Graphics2D)
~ void drawButton(Graphics2D)
}
class de.swt.gui.workspace.SelectGroupPanel {
- JPanel mainPanel
- JComboBox<Integer> selectGroupComboBox
+ JButton startTaskButton
- JLabel selectGroupLabel
- List<Group> groups
- void setupGUI(String,String)
+ void updateGUI(List<Group>)
- void setupListeners()
- void initForAccountType()
+ Group getSelectedGroup()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.classroom.ClassroomGUI {
- JPanel mainPanel
- JLabel grade11Label
- JLabel grade10Label
- JLabel grade12Label
+ JButton logoutButton
+ JButton privateWorkspaceButton
- JButton supportButton
+ JButton createClassroomButton
- JPanel gradePanel10
- JPanel gradePanel11
- JPanel gradePanel12
- JScrollPane scrollPanel10
- JScrollPane scrollPanel11
- JScrollPane scrollPanel12
- JPanel subPanel
- List<GradePanel> gradePanels
- CreateClassroomPanel createClassroomPanel
- void setupGUI(String,String,String,String,String,String)
+ void updateGUI(ArrayList<User>)
+ void updateGUI()
- void setupActionListeners()
- void logout()
+ void addGradePanel(GradePanel)
+ GradePanel getGradePanel(int)
+ void updateGradePanels()
- void removeAllGradePanels()
+ void initForAccountType()
- void removeEditButtonsFromGradePanels()
+ String getCreateClassroomGradeName()
+ String getCreateClassroomTeacher()
+ String getCreateClassroomDate()
- void privateWorkspaceFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.drawing.objects.Arrow {
+ int width
+ int height
+ int startX
+ int startY
+ int endX
+ int endY
+ int arrowHeadWidth
+ int arrowHeadWidthConstant
~ void drawFunction(Graphics2D)
~ void calculateWidthAndHeight(Graphics2D)
~ GUI createPopup()
}
class de.swt.drawing.buttons.DottedArrowButton {
~ void setupListeners()
~ void drawButton(Graphics2D)
}
class de.swt.drawing.buttonGUIS.StandardGUI {
- JPanel mainPanel
- JTextField descriptionTextField
- JSlider scaleSlider
- JLabel descriptionLabel
- JLabel scaleLabel
- JLabel colorLabel
- JButton colorButton
- JColorChooser colorChooser
- DrawableObject associatedObject
- String description
- Color color
- double scale
- void setupGUI(String,String,String,String)
+ void updateGUI()
- void setupListeners()
- double convertSliderValue(int)
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}
class de.swt.gui.workspace.AddUserPanel {
- JPanel mainPanel
+ JButton addButton
- JTextField studentTextField
- JLabel headerLabel
- JLabel studentLabel
- void setupGUI(String,String,String)
+ void updateGUI()
- void setupListeners()
- void initForAccountType()
+ int getStudentID()
- void addFunction()
- void $$$setupUI$$$()
+ JComponent $$$getRootComponent$$$()
}


java.io.Serializable <|.. de.swt.manager.CommandObject
java.io.Serializable <|.. de.swt.logic.course.Course
de.swt.gui.GUI <|-- de.swt.gui.classroom.GradePanel
de.swt.rmi.Remote <|-- de.swt.rmi.RMIServerInterface
de.swt.gui.GUI <|-- de.swt.gui.workspace.GroupButtonPanel
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.ThumbDown
de.swt.gui.GUI <|-- de.swt.gui.workspace.CreateGroupPanel
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.UseCase
de.swt.gui.GUI <|-- de.swt.gui.classroom.EditClassroomPanel
de.swt.gui.GUI <|-- de.swt.gui.workspace.CreateTaskPanel
de.swt.gui.GUI <|-- de.swt.gui.workspace.WorkspaceGUI
de.swt.gui.GUI <|-- de.swt.gui.workspace.SymbolListPanel
de.swt.database.AsyncMySQL +.. de.swt.database.AsyncMySQL.MySQL
java.io.Serializable <|.. de.swt.logic.user.User
de.swt.drawing.buttons.JComponent <|-- de.swt.drawing.buttons.DrawableObjectButton
de.swt.gui.JFrame <|-- de.swt.gui.GUIManager
de.swt.gui.GUI <|-- de.swt.gui.workspace.UserButtonPanel
de.swt.gui.GUI <|-- de.swt.gui.classroom.CreateClassroomPanel
de.swt.gui.GUI <|-- de.swt.gui.workspace.ObjectListPanel
de.swt.drawing.objects.Arrow <|-- de.swt.drawing.objects.DottedArrow
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.Actor
java.io.Serializable <|.. de.swt.logic.TestClass
de.swt.gui.GUI <|-- de.swt.gui.useroverview.UserOverviewGUI
de.swt.drawing.Draggable <|-- de.swt.drawing.objects.DrawableObject
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.RotatableObject
de.swt.drawing.buttons.DrawableObjectButton <|-- de.swt.drawing.buttons.ActorButton
java.util.TimerTask <|-- de.swt.util.ReadCommandList
de.swt.gui.GUI <|-- de.swt.gui.login.LoginGUI
de.swt.gui.GUI <|-- de.swt.gui.workspace.RequestPanel
de.swt.gui.GUI <|-- de.swt.gui.workspace.DrawablePanel
de.swt.gui.GUI <|-- de.swt.drawing.buttonGUIS.ResizingGUI
de.swt.gui.workspace.JMenuBar <|-- de.swt.gui.workspace.Menu
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.ResizableObject
de.swt.gui.JPanel <|-- de.swt.gui.GUI
de.swt.drawing.objects.DrawableObject <|-- de.swt.drawing.objects.ThumbUp
de.swt.drawing.buttons.DrawableObjectButton <|-- de.swt.drawing.buttons.UseCaseButton
de.swt.gui.GUI <|-- de.swt.gui.workspace.SubmitTaskPanel
de.swt.gui.GUI <|-- de.swt.gui.classroom.AdminEditClassroomPanel
java.io.Serializable <|.. de.swt.drawing.Draggable
de.swt.drawing.JComponent <|-- de.swt.drawing.Draggable
de.swt.gui.GUI <|-- de.swt.drawing.buttonGUIS.RotatingGUI
java.io.Serializable <|.. de.swt.logic.group.Group
de.swt.drawing.buttons.DrawableObjectButton <|-- de.swt.drawing.buttons.ArrowButton
de.swt.gui.GUI <|-- de.swt.gui.workspace.ShowTaskPanel
de.swt.drawing.objects.ResizableObject <|-- de.swt.drawing.objects.SystemBox
de.swt.drawing.buttons.DrawableObjectButton <|-- de.swt.drawing.buttons.SystemBoxButton
de.swt.gui.GUI <|-- de.swt.gui.workspace.SelectGroupPanel
de.swt.gui.GUI <|-- de.swt.gui.classroom.ClassroomGUI
de.swt.drawing.objects.RotatableObject <|-- de.swt.drawing.objects.Arrow
de.swt.drawing.buttons.ArrowButton <|-- de.swt.drawing.buttons.DottedArrowButton
de.swt.gui.GUI <|-- de.swt.drawing.buttonGUIS.StandardGUI
de.swt.gui.GUI <|-- de.swt.gui.workspace.AddUserPanel
@enduml