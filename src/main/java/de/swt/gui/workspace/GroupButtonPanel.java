package de.swt.gui.workspace;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import de.swt.gui.GUI;
import de.swt.gui.GUIManager;
import de.swt.logic.group.Group;
import de.swt.util.Language;
import lombok.Getter;
import lombok.Setter;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.rmi.RemoteException;

@Getter
@Setter
public class GroupButtonPanel extends GUI {
    private JPanel mainPanel;
    private JButton watchButton;
    private JButton terminateButton;
    private Group group;

    public GroupButtonPanel(GUIManager guiManager) {
        super(guiManager);
        this.add(mainPanel);

        switch (guiManager.getLanguage()) {
            case GERMAN -> setupGUI("Terminieren", "Zuschauen");
            case ENGLISH -> setupGUI("Terminate", "Watch");
        }

        setupListeners();
    }

    private void setupGUI(String terminate, String watch) {
        this.terminateButton.setText(terminate);
        this.watchButton.setText(watch);
    }

    @Override
    public void updateGUI() {
        if (getGuiManager().getClient().getCurrentGroup() != null) {
            switch (getGuiManager().getLanguage()) {
                case GERMAN -> setupGUI("Terminieren", "Verlassen");
                case ENGLISH -> setupGUI("Terminate", "Leave");
            }
        } else {
            switch (getGuiManager().getLanguage()) {
                case GERMAN -> setupGUI("Terminieren", "Zuschauen");
                case ENGLISH -> setupGUI("Terminate", "Watch");
            }
        }
        setupListeners();
    }

    @Override
    public void setupListeners() {
        watchButton.removeAll();
        terminateButton.removeAll();
        if (getGuiManager().getClient().getCurrentGroup() != null) {
            terminateButton.addActionListener(e -> terminateFunction());
            watchButton.addActionListener(e -> watchFunction());
        } else {
            terminateButton.addActionListener(e -> terminateFunction());
            watchButton.addActionListener(e -> leaveFunction());
        }
    }

    private void leaveFunction() {
        group.getUserIds().remove(getGuiManager().getClient().getUserId());
        try {
            getGuiManager().getClient().getServer().updateGroup(group);
            watchButton.setBackground(UIManager.getColor("JButton"));
        } catch (RemoteException e) {
            watchButton.setBackground(Color.RED);
        }
    }

    private void terminateFunction() {
        try {
            getGuiManager().getClient().getServer().deleteGroup(group.getGroupId());
            terminateButton.setBackground(UIManager.getColor("JButton"));
        } catch (RemoteException e) {
            terminateButton.setBackground(Color.RED);
        }
    }

    private void watchFunction() {
        group.getUserIds().add(getGuiManager().getClient().getUserId());
        try {
            getGuiManager().getClient().getServer().updateGroup(group);
            watchButton.setBackground(UIManager.getColor("JButton"));
        } catch (RemoteException e) {
            watchButton.setBackground(Color.RED);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(5, 5, 5, 5), -1, -1));
        watchButton = new JButton();
        watchButton.setText("Button");
        mainPanel.add(watchButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        terminateButton = new JButton();
        terminateButton.setText("Button");
        mainPanel.add(terminateButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
