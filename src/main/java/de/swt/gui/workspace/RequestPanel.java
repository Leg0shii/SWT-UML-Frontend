package de.swt.gui.workspace;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import de.swt.gui.GUI;
import de.swt.gui.GUIManager;
import de.swt.logic.user.User;
import lombok.Setter;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.rmi.RemoteException;

@Setter
public class RequestPanel extends GUI {
    private JPanel mainPanel;
    public JButton acceptButton;
    public JButton denyButton;
    private User user;
    private JLabel requestLabel;

    public RequestPanel(GUIManager guiManager) {
        super(guiManager);

        switch (guiManager.getLanguage()) {
            case GERMAN -> setupGUI(" mÃ¶chte beitreten", "Akzeptieren", "Verweigern");
            case ENGLISH -> setupGUI(" wants to join", "Accept", "Deny");
        }

        setupListeners();
    }

    @Override
    public void updateGUI() {
        String[] split = requestLabel.getText().split(" ");
        this.requestLabel.setText(user.getFullName() + " " + split[1] + " " + split[2]);
    }

    private void setupGUI(String request, String accept, String deny) {
        this.requestLabel.setText(request);
        this.acceptButton.setText(accept);
        this.denyButton.setText(deny);
    }

    @Override
    public void setupListeners() {
        acceptButton.addActionListener(e -> acceptFunction());
        denyButton.addActionListener(e -> denyFunction());
    }

    public void acceptFunction() {
        try {
            getGuiManager().getClient().getServer().sendAnswer(getGuiManager().getClient().getUserId(), user.getUserId(), 1);
            acceptButton.setBackground(UIManager.getColor("JButton"));
        } catch (RemoteException e) {
            acceptButton.setBackground(Color.RED);
        }
    }

    public void denyFunction() {
        try {
            getGuiManager().getClient().getServer().sendAnswer(getGuiManager().getClient().getUserId(), user.getUserId(), 0);
            denyButton.setBackground(UIManager.getColor("JButton"));
        } catch (RemoteException e) {
            denyButton.setBackground(Color.RED);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 2, new Insets(5, 5, 5, 5), -1, -1));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        requestLabel = new JLabel();
        requestLabel.setHorizontalAlignment(0);
        requestLabel.setText("Label");
        mainPanel.add(requestLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        acceptButton = new JButton();
        acceptButton.setText("Button");
        mainPanel.add(acceptButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        denyButton = new JButton();
        denyButton.setText("Button");
        mainPanel.add(denyButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
