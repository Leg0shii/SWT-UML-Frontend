package de.swt.gui.classroom;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import de.swt.gui.GUI;
import de.swt.gui.GUIManager;
import de.swt.logic.course.Course;
import lombok.Setter;

import javax.swing.*;
import java.awt.*;
import java.rmi.RemoteException;

@Setter
public class EditClassroomPanel extends GUI {
    private JButton addButton;
    private JPanel mainPanel;
    private JTextField studentTextField;
    private JLabel studentTextFieldLabel;
    private JButton removeButton;
    private Course course;

    public EditClassroomPanel(GUIManager guiManager) {
        super(guiManager);
        this.add(mainPanel);
        switch (guiManager.getLanguage()) {
            case GERMAN -> this.setupGUI("<html>Schüler <br> hinzufügen</html>", "Hinzufügen", "Entfernen");
            case ENGLISH -> this.setupGUI("Add student", "Add", "Remove");
        }
    }

    private void setupGUI(String student, String done, String remove) {
        this.studentTextFieldLabel.setText(student);
        this.addButton.setText(done);
        this.removeButton.setText(remove);
    }

    public void updateGUI() {

    }

    @Override
    public void setupListeners() {
        addButton.addActionListener(e -> addFunction());
        removeButton.addActionListener(e -> removeFunction());
    }

    private void removeFunction() {
        int userId;

        userId = Integer.parseInt(getStudent());
        if (course.getUserIds().contains(userId)) {
            course.getUserIds().remove((Integer) userId);
            removeButton.updateUI();
        } else {
            removeButton.setBackground(Color.RED);
            return;
        }

        try {
            getGuiManager().getClient().getServer().updateCourse(course);
            removeButton.updateUI();
        } catch (RemoteException e) {
            e.printStackTrace();
            removeButton.setBackground(Color.RED);
        }
    }

    public String getStudent() {
        return studentTextField.getText();
    }

    public void addFunction() {
        int userId;

        userId = Integer.parseInt(getStudent());
        if (course.getUserIds().contains(userId)) {
            addButton.setBackground(Color.RED);
            return;
        }
        course.getUserIds().add(userId);

        try {
            getGuiManager().getClient().getServer().updateCourse(course);
            addButton.updateUI();
        } catch (RemoteException e) {
            e.printStackTrace();
            addButton.setBackground(Color.RED);
        }
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 4, new Insets(0, 0, 0, 0), -1, -1));
        studentTextFieldLabel = new JLabel();
        studentTextFieldLabel.setText("Label");
        mainPanel.add(studentTextFieldLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        studentTextField = new JTextField();
        mainPanel.add(studentTextField, new GridConstraints(0, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        addButton = new JButton();
        addButton.setText("Button");
        mainPanel.add(addButton, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        removeButton = new JButton();
        removeButton.setText("Button");
        mainPanel.add(removeButton, new GridConstraints(1, 2, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        studentTextFieldLabel.setLabelFor(studentTextField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
